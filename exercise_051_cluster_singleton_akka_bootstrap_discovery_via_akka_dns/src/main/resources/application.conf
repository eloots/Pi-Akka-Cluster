## Recommended settings for robust cluster
akka.cluster.shutdown-after-unsuccessful-join-seed-nodes = 30s
akka.coordinated-shutdown.exit-jvm = on

akka {

  // When you're unsure about your Akka config, or you want
  // to see what settings exist, uncomment the following line
  //log-config-on-start = on

  management.http {
    // This will allow one to alter the state of a cluster using Akka HTTP Management
    // Setting this option to false may create a security exposure in production
    // environments
    route-providers-read-only = false

    //host = 127.0.0.1
    port = 8558
  }

  // We'll use Akka Cluster Bootstrap with Discovery via akka-dns
  discovery.method = akka-dns

  management.cluster.bootstrap.contact-point-discovery {
    required-contact-point-nr = 3
    // If you want Akka Discovery via akka-dns to use SRV records,
    // adapt the following settings. Akka Discovery will look for
    // SRV entries with path: _management._tcp.picluster.lb.com
    service-name              = "picluster.lb.com"
    protocol                  = "tcp"
    port-name                 = "management"
  }

  loggers = [akka.event.slf4j.Slf4jLogger]
  loglevel = debug
  log-dead-letters = on
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 30s

  actor {

    provider = cluster

    debug {

      lifecycle = on
      unhandled = on
    }
  }

  remote {

    artery {
      transport = tcp

      enabled = on

      canonical {
        hostname = "127.0.0.1"
        port = 2550
      }
    }
  }

}

cinnamon {

  //  akka.cluster {
  //    domain-events = on
  //    member-events = on
  //    singleton-events = on
  //    shard-region-info = on
  //  }

  akka.actors {
    "/user/*" {
      report-by = instance
    }
  }

  prometheus {
    exporters += http-server

    http-server {
      host = "0.0.0.0"
    }
  }
}
