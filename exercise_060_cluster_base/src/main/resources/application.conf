akka {

  discovery.method = config

  management.http {
    // This will allow one to alter the state of a cluster using Akka HTTP Management
    // Setting this option to false may create a security exposure in production
    // environments
    route-providers-read-only = false

    //host = 127.0.0.1
    port = 8558
  }

  log-dead-letters = on
  logger-startup-timeout = 30s

  actor {

    provider = cluster

    debug {
      lifecycle = on
      unhandled = on
    }
  }

  cluster {

    seed-node-timeout = 12 seconds

    seed-nodes = ["akka://pi-"${cluster-node-configuration.cluster-id}"-system@"${cluster-node-configuration.seed-node-1}":2550",
                  "akka://pi-"${cluster-node-configuration.cluster-id}"-system@"${cluster-node-configuration.seed-node-2}":2550",
                  "akka://pi-"${cluster-node-configuration.cluster-id}"-system@"${cluster-node-configuration.seed-node-3}":2550",
                  "akka://pi-"${cluster-node-configuration.cluster-id}"-system@"${cluster-node-configuration.seed-node-4}":2550"]

    # The intervals below are slowed down on purpose in order to show what is happening inside of Akka Cluster
    # Usually you do not need to change those values and should only do so if you understand what they mean
//    gossip-interval = 2s
//    gossip-time-to-live = 4s
//    leader-actions-interval = 2s
//    unreachable-nodes-reaper-interval = 2s
//    publish-stats-interval = 500ms

  }

  remote {

    artery {
      canonical {
        hostname = "127.0.0.1"
        port = 2550
      }
    }
  }
}

cinnamon {

//  akka.cluster {
//    domain-events = on
//    member-events = on
//    singleton-events = on
//    shard-region-info = on
//  }

  akka.actors {
    "/user/*" {
      report-by = instance
    }
  }

  prometheus {
    exporters += http-server

    http-server {
      host = "0.0.0.0"
    }
  }
}
